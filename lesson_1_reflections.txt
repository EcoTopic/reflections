#How did viewing a diff between two versions of a file help you see the bug that was introduced?

The lines that were changed were plotted close to each other so the difference becomes cler almost immeditely

nix: diff -u old.txt new.txt
win: FC old.txt new.txt

#How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
If you work out a piece of code and end up deleting it as the insights change, you can get back to it from another project when you want to use it. This keeps your current code clean of all the jibebrish you accumulate during the developing cycle, but with the confidence that you will not loose anything for future reference. Versions show your thinking process, next time it might go faster if you discover patterns in your thoughts.

#What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Manually chosing commit will help to get a list of logical changes, that is if you choose to commit after changing a feature before working on another unrelated aspect. Saving after a fixed amount of time would end up with a list of changes that are not logical.

#Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
When you develop files that are interrelated, a commits needs to keep track of all these files at logical points of change, as a change in one file can affect how other files function. When your version control is rather focussed on individidual files, mutiple files commit would not be necessary and to cumbersome to work with.

#How can you use the commands git log and git diff to view the history of files?
$git log #shows commit history with comments, so you can find the commits that you want to compare. copy paste these id's in
$git diff oldID newID # to find details of the changes
$ git dif --stat  oldID newID #gives you summary of number of changes made.

#How might using version control make you more confident to make changes that could break something?
It is easy to revert to older version.

#Now that you have your workspace set up, what do you want to try using Git for?
version control of any document I work on


